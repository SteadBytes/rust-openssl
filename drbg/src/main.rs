// use ffi::macros::*;
use ffi::*;
use libc::*;
use openssl::error::ErrorStack;
use openssl::rand::RandDRBG;
use openssl_sys as ffi;

fn main() {
    let mut data = [0; 32];
    println!("{:?}", data);

    let drbg = RandDRBG::new().unwrap();
    drbg.generate(&mut data);

    let expected: [u8; 32] = [
        0x8c, 0xf5, 0x9c, 0x8c, 0xf6, 0x88, 0x8b, 0x96, 0xeb, 0x1c, 0x1e, 0x3e, 0x79, 0xd8, 0x23,
        0x87, 0xaf, 0x08, 0xa9, 0xe5, 0xff, 0x75, 0xe2, 0x3f, 0x1f, 0xbc, 0xd4, 0x55, 0x9b, 0x6b,
        0x99, 0x7e,
    ];
    assert_eq!(data, expected);
    println!("{:?}", data);
}
